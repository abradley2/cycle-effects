{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["const Events = require('mitt')\nconst xs = require('xstream').default\n\nmodule.exports = (simulate) => (effects$) => {\n  const emitter = new Events()\n\n  const unsub = effects$.subscribe({\n    next: function ([runEffect, config]) {\n      const args = config.args || []\n      const mock = typeof simulate === 'object' &&\n        (simulate[config.tag] || simulate[runEffect.name])\n\n      ;(mock || runEffect)(...args)\n        .then((result) => {\n          emitter.emit(config.tag, { result, error: null })\n        })\n        .catch((error) => {\n          emitter.emit(config.tag, { result: null, error })\n        })\n    },\n    complete: function () {\n      unsub()\n    }\n  })\n\n  return function (tag) {\n    let sub\n    return xs.create({\n      start: function (listener) {\n        sub = (e) => {\n          listener.next(e)\n        }\n        emitter.on(tag, sub)\n      },\n      stop: function () {\n        emitter.off(tag, sub)\n      }\n    })\n  }\n}\n"],"names":["const","Events","require","xs","default","module","exports","simulate","effects$","emitter","unsub","subscribe","next","ref","config","tag","runEffect","name","args","then","result","emit","error","catch","complete","sub","create","start","listener","on","e","stop","off"],"mappings":"AAAAA,IAAMC,EAASC,QAAQ,QACjBC,EAAKD,QAAQ,WAAWE,QAE9BC,OAAOC,iBAAWC,mBAAcC,OACxBC,EAAU,IAAIR,EAEdS,EAAQF,EAASG,UAAU,CAC/BC,KAAM,SAAUC,sBAEmB,iBAAbN,IACjBA,EAASO,EAAOC,MAAQR,EAASS,EAAUC,QAEpCD,cAAW,EAJRF,EAAOI,MAAQ,IAKzBC,cAAMC,GACLX,EAAQY,KAAKP,EAAOC,IAAK,QAAEK,EAAQE,MAAO,SAE3CC,eAAOD,GACNb,EAAQY,KAAKP,EAAOC,IAAK,CAAEK,OAAQ,WAAME,OAG/CE,SAAU,WACRd,cAIG,SAAUK,OACXU,SACGtB,EAAGuB,OAAO,CACfC,MAAO,SAAUC,GAIfnB,EAAQoB,GAAGd,EAHXU,WAAOK,GACLF,EAAShB,KAAKkB,MAIlBC,KAAM,WACJtB,EAAQuB,IAAIjB,EAAKU"}